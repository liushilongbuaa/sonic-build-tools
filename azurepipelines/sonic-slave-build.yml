resources:
  repositories:
  - repository: base
    type: git
    name: Networking-acs-buildimage or Networking-acs-sonic-mgmt
    ref: 'refs/heads/internal'
    endpoint: #TODO

steps:
  - checkout: base
    clean: true
    persistCredentials: true
  - bash: |
      FAILED=""
      git remote add target $(target_url)
      git remote update || exit 1
      git config --global user.email "svc-acs@microsoft.com"
      git config --global user.name "Sonic Automation"

      branches="master 201811 201911 `git ls-remote azure refs/heads/202??? 2>/dev/null | cut -d/ -f3`"
      for branch in $branches
      do
        base_branch=$branch
        target_branch=internal-$branch
        if [[ $base_branch == "master" ]];then
          target_branch=internal
        fi

        echo "=======Start merging. branch: ${branch}======="
        git checkout -b ${base_branch} --track origin/${base_branch}
        curr_tag="${base_branch}-`date '+%Y%m%d-%H%M'`.pre-merge"
        post_tag="${base_branch}-`date '+%Y%m%d-%H%M'`.post-merge"
        git tag ${curr_tag}

        git pull target ${target_branch} --no-edit || (FAILED="${FAILED} ${base_branch}"; continue)

        head_tag=`git tag --contains HEAD`
        tem=`echo ${head_tag} | grep ${curr_tag}`
        if [[ ${tem} != "" ]];then
          echo "======No change after rebasing ...======"
          continue
        else
          git tag ${post_tag} || (FAILED="${FAILED} ${base_branch}"; continue)
        fi
        git push origin ${curr_tag} || (FAILED="${FAILED} ${base_branch}"; continue)
        git push origin ${post_tag} || (FAILED="${FAILED} ${base_branch}"; continue)
        git push origin ${base_branch} || (FAILED="${FAILED} ${base_branch}"; continue)
      done

      if [[ ${FAILED} != "" ]];then
        echo "======Failed to merge following branches: ${FAILED} ...======"
        exit 1
      fi
